{"version":3,"sources":["tabs/utils.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAUA;gBAcI,sBAA6C,OAAwB;oBAAxB,YAAO,GAAP,OAAO,CAAiB;gBACrE,CAAC;gBAZD,sBAAY,sCAAY;yBAOxB;wBACI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;oBAC9B,CAAC;yBATD,UAAyB,WAAuB;wBAC5C,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC;wBACjC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;4BACd,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;wBACjD,CAAC;oBACL,CAAC;;;mBAAA;gBAZL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,gBAAgB;wBAC1B,UAAU,EAAE,CAAC,cAAc,CAAC;qBAC/B,CAAC;+BAee,aAAM,CAAC,uBAAgB,CAAC;;gCAfvC;gBAiBF,mBAAC;YAAD,CAhBA,AAgBC,IAAA;YAhBD,uCAgBC,CAAA","file":"utils.js","sourcesContent":["import {Directive, TemplateRef, ViewContainerRef, Inject} from 'angular2/core';\n\nexport interface IAttribute {\n    [key: string]: any;\n}\n\n@Directive({\n    selector: '[ngTransclude]',\n    properties: ['ngTransclude']\n})\nexport class NgTransclude {\n    private _ngTransclude: TemplateRef;\n\n    private set ngTransclude(templateRef:TemplateRef) {\n        this._ngTransclude = templateRef;\n        if (templateRef) {\n            this.viewRef.createEmbeddedView(templateRef);\n        }\n    }\n\n    private get ngTransclude() {\n        return this._ngTransclude;\n    }\n\n    constructor(@Inject(ViewContainerRef) public viewRef:ViewContainerRef) {\n    }\n}"]}